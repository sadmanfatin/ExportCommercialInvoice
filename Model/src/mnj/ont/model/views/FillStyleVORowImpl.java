package mnj.ont.model.views;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 14 16:32:52 BDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FillStyleVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        InvoiceNo {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getInvoiceNo();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setInvoiceNo((String)value);
            }
        }
        ,
        InvoiceDate {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getInvoiceDate();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setInvoiceDate((Date)value);
            }
        }
        ,
        Style {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getStyle();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Color {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getColor();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        InvoiceAmount {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getInvoiceAmount();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setInvoiceAmount((Number)value);
            }
        }
        ,
        Consumption {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getConsumption();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setConsumption((Number)value);
            }
        }
        ,
        UdConsumption {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getUdConsumption();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setUdConsumption((String)value);
            }
        }
        ,
        Description {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getDescription();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        UdNumber {
            public Object get(FillStyleVORowImpl obj) {
                return obj.getUdNumber();
            }

            public void put(FillStyleVORowImpl obj, Object value) {
                obj.setUdNumber((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FillStyleVORowImpl object);

        public abstract void put(FillStyleVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INVOICENO = AttributesEnum.InvoiceNo.index();
    public static final int INVOICEDATE = AttributesEnum.InvoiceDate.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int INVOICEAMOUNT = AttributesEnum.InvoiceAmount.index();
    public static final int CONSUMPTION = AttributesEnum.Consumption.index();
    public static final int UDCONSUMPTION = AttributesEnum.UdConsumption.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int UDNUMBER = AttributesEnum.UdNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FillStyleVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceNo.
     * @return the InvoiceNo
     */
    public String getInvoiceNo() {
        return (String) getAttributeInternal(INVOICENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceNo.
     * @param value value to set the  InvoiceNo
     */
    public void setInvoiceNo(String value) {
        setAttributeInternal(INVOICENO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceDate.
     * @return the InvoiceDate
     */
    public Date getInvoiceDate() {
        return (Date) getAttributeInternal(INVOICEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceDate.
     * @param value value to set the  InvoiceDate
     */
    public void setInvoiceDate(Date value) {
        setAttributeInternal(INVOICEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Style.
     * @return the Style
     */
    public String getStyle() {
        return (String) getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Style.
     * @param value value to set the  Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Color.
     * @return the Color
     */
    public String getColor() {
        return (String) getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Color.
     * @param value value to set the  Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceAmount.
     * @return the InvoiceAmount
     */
    public Number getInvoiceAmount() {
        return (Number) getAttributeInternal(INVOICEAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceAmount.
     * @param value value to set the  InvoiceAmount
     */
    public void setInvoiceAmount(Number value) {
        setAttributeInternal(INVOICEAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Consumption.
     * @return the Consumption
     */
    public Number getConsumption() {
        return (Number) getAttributeInternal(CONSUMPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Consumption.
     * @param value value to set the  Consumption
     */
    public void setConsumption(Number value) {
        setAttributeInternal(CONSUMPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UdConsumption.
     * @return the UdConsumption
     */
    public String getUdConsumption() {
        return (String) getAttributeInternal(UDCONSUMPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UdConsumption.
     * @param value value to set the  UdConsumption
     */
    public void setUdConsumption(String value) {
        setAttributeInternal(UDCONSUMPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Description.
     * @param value value to set the  Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UdNumber.
     * @return the UdNumber
     */
    public String getUdNumber() {
        return (String) getAttributeInternal(UDNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UdNumber.
     * @param value value to set the  UdNumber
     */
    public void setUdNumber(String value) {
        setAttributeInternal(UDNUMBER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
