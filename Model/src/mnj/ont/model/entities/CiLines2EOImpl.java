package mnj.ont.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 14 15:06:09 BDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CiLines2EOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ExpCiLine2Id {
            public Object get(CiLines2EOImpl obj) {
                return obj.getExpCiLine2Id();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setExpCiLine2Id((Number)value);
            }
        }
        ,
        ExpCiHeaderId {
            public Object get(CiLines2EOImpl obj) {
                return obj.getExpCiHeaderId();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setExpCiHeaderId((Number)value);
            }
        }
        ,
        Quantity {
            public Object get(CiLines2EOImpl obj) {
                return obj.getQuantity();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setQuantity((Number)value);
            }
        }
        ,
        Style {
            public Object get(CiLines2EOImpl obj) {
                return obj.getStyle();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Consumption {
            public Object get(CiLines2EOImpl obj) {
                return obj.getConsumption();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setConsumption((String)value);
            }
        }
        ,
        UsedFabric {
            public Object get(CiLines2EOImpl obj) {
                return obj.getUsedFabric();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setUsedFabric((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        AttributeNum1 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum1();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum1((Number)value);
            }
        }
        ,
        AttributeNum2 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum2();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum2((Number)value);
            }
        }
        ,
        AttributeNum3 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum3();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum3((Number)value);
            }
        }
        ,
        AttributeNum4 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum4();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum4((Number)value);
            }
        }
        ,
        AttributeNum5 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum5();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum5((Number)value);
            }
        }
        ,
        AttributeNum6 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum6();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum6((Number)value);
            }
        }
        ,
        AttributeNum7 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum7();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum7((Number)value);
            }
        }
        ,
        AttributeNum8 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum8();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum8((Number)value);
            }
        }
        ,
        AttributeNum9 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum9();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum9((Number)value);
            }
        }
        ,
        AttributeNum10 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeNum10();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeNum10((Number)value);
            }
        }
        ,
        AttributeDate1 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeDate1();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeDate1((Date)value);
            }
        }
        ,
        AttributeDate2 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeDate2();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeDate2((Date)value);
            }
        }
        ,
        AttributeDate3 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeDate3();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeDate3((Date)value);
            }
        }
        ,
        AttributeDate4 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeDate4();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeDate4((Date)value);
            }
        }
        ,
        AttributeDate5 {
            public Object get(CiLines2EOImpl obj) {
                return obj.getAttributeDate5();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setAttributeDate5((Date)value);
            }
        }
        ,
        Color {
            public Object get(CiLines2EOImpl obj) {
                return obj.getColor();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        CiHeaders {
            public Object get(CiLines2EOImpl obj) {
                return obj.getCiHeaders();
            }

            public void put(CiLines2EOImpl obj, Object value) {
                obj.setCiHeaders((CiHeadersEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CiLines2EOImpl object);

        public abstract void put(CiLines2EOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int EXPCILINE2ID = AttributesEnum.ExpCiLine2Id.index();
    public static final int EXPCIHEADERID = AttributesEnum.ExpCiHeaderId.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int CONSUMPTION = AttributesEnum.Consumption.index();
    public static final int USEDFABRIC = AttributesEnum.UsedFabric.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTENUM1 = AttributesEnum.AttributeNum1.index();
    public static final int ATTRIBUTENUM2 = AttributesEnum.AttributeNum2.index();
    public static final int ATTRIBUTENUM3 = AttributesEnum.AttributeNum3.index();
    public static final int ATTRIBUTENUM4 = AttributesEnum.AttributeNum4.index();
    public static final int ATTRIBUTENUM5 = AttributesEnum.AttributeNum5.index();
    public static final int ATTRIBUTENUM6 = AttributesEnum.AttributeNum6.index();
    public static final int ATTRIBUTENUM7 = AttributesEnum.AttributeNum7.index();
    public static final int ATTRIBUTENUM8 = AttributesEnum.AttributeNum8.index();
    public static final int ATTRIBUTENUM9 = AttributesEnum.AttributeNum9.index();
    public static final int ATTRIBUTENUM10 = AttributesEnum.AttributeNum10.index();
    public static final int ATTRIBUTEDATE1 = AttributesEnum.AttributeDate1.index();
    public static final int ATTRIBUTEDATE2 = AttributesEnum.AttributeDate2.index();
    public static final int ATTRIBUTEDATE3 = AttributesEnum.AttributeDate3.index();
    public static final int ATTRIBUTEDATE4 = AttributesEnum.AttributeDate4.index();
    public static final int ATTRIBUTEDATE5 = AttributesEnum.AttributeDate5.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int CIHEADERS = AttributesEnum.CiHeaders.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CiLines2EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.ont.model.entities.CiLines2EO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ExpCiLine2Id, using the alias name ExpCiLine2Id.
     * @return the ExpCiLine2Id
     */
    public Number getExpCiLine2Id() {
        return (Number)getAttributeInternal(EXPCILINE2ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpCiLine2Id.
     * @param value value to set the ExpCiLine2Id
     */
    public void setExpCiLine2Id(Number value) {
        setAttributeInternal(EXPCILINE2ID, value);
    }

    /**
     * Gets the attribute value for ExpCiHeaderId, using the alias name ExpCiHeaderId.
     * @return the ExpCiHeaderId
     */
    public Number getExpCiHeaderId() {
        return (Number)getAttributeInternal(EXPCIHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpCiHeaderId.
     * @param value value to set the ExpCiHeaderId
     */
    public void setExpCiHeaderId(Number value) {
        setAttributeInternal(EXPCIHEADERID, value);
    }

    /**
     * Gets the attribute value for Quantity, using the alias name Quantity.
     * @return the Quantity
     */
    public Number getQuantity() {
        return (Number)getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Quantity.
     * @param value value to set the Quantity
     */
    public void setQuantity(Number value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Consumption, using the alias name Consumption.
     * @return the Consumption
     */
    public String getConsumption() {
        return (String)getAttributeInternal(CONSUMPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Consumption.
     * @param value value to set the Consumption
     */
    public void setConsumption(String value) {
        setAttributeInternal(CONSUMPTION, value);
    }

    /**
     * Gets the attribute value for UsedFabric, using the alias name UsedFabric.
     * @return the UsedFabric
     */
    public String getUsedFabric() {
        return (String)getAttributeInternal(USEDFABRIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsedFabric.
     * @param value value to set the UsedFabric
     */
    public void setUsedFabric(String value) {
        setAttributeInternal(USEDFABRIC, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for AttributeNum1, using the alias name AttributeNum1.
     * @return the AttributeNum1
     */
    public Number getAttributeNum1() {
        return (Number)getAttributeInternal(ATTRIBUTENUM1);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum1.
     * @param value value to set the AttributeNum1
     */
    public void setAttributeNum1(Number value) {
        setAttributeInternal(ATTRIBUTENUM1, value);
    }

    /**
     * Gets the attribute value for AttributeNum2, using the alias name AttributeNum2.
     * @return the AttributeNum2
     */
    public Number getAttributeNum2() {
        return (Number)getAttributeInternal(ATTRIBUTENUM2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum2.
     * @param value value to set the AttributeNum2
     */
    public void setAttributeNum2(Number value) {
        setAttributeInternal(ATTRIBUTENUM2, value);
    }

    /**
     * Gets the attribute value for AttributeNum3, using the alias name AttributeNum3.
     * @return the AttributeNum3
     */
    public Number getAttributeNum3() {
        return (Number)getAttributeInternal(ATTRIBUTENUM3);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum3.
     * @param value value to set the AttributeNum3
     */
    public void setAttributeNum3(Number value) {
        setAttributeInternal(ATTRIBUTENUM3, value);
    }

    /**
     * Gets the attribute value for AttributeNum4, using the alias name AttributeNum4.
     * @return the AttributeNum4
     */
    public Number getAttributeNum4() {
        return (Number)getAttributeInternal(ATTRIBUTENUM4);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum4.
     * @param value value to set the AttributeNum4
     */
    public void setAttributeNum4(Number value) {
        setAttributeInternal(ATTRIBUTENUM4, value);
    }

    /**
     * Gets the attribute value for AttributeNum5, using the alias name AttributeNum5.
     * @return the AttributeNum5
     */
    public Number getAttributeNum5() {
        return (Number)getAttributeInternal(ATTRIBUTENUM5);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum5.
     * @param value value to set the AttributeNum5
     */
    public void setAttributeNum5(Number value) {
        setAttributeInternal(ATTRIBUTENUM5, value);
    }

    /**
     * Gets the attribute value for AttributeNum6, using the alias name AttributeNum6.
     * @return the AttributeNum6
     */
    public Number getAttributeNum6() {
        return (Number)getAttributeInternal(ATTRIBUTENUM6);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum6.
     * @param value value to set the AttributeNum6
     */
    public void setAttributeNum6(Number value) {
        setAttributeInternal(ATTRIBUTENUM6, value);
    }

    /**
     * Gets the attribute value for AttributeNum7, using the alias name AttributeNum7.
     * @return the AttributeNum7
     */
    public Number getAttributeNum7() {
        return (Number)getAttributeInternal(ATTRIBUTENUM7);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum7.
     * @param value value to set the AttributeNum7
     */
    public void setAttributeNum7(Number value) {
        setAttributeInternal(ATTRIBUTENUM7, value);
    }

    /**
     * Gets the attribute value for AttributeNum8, using the alias name AttributeNum8.
     * @return the AttributeNum8
     */
    public Number getAttributeNum8() {
        return (Number)getAttributeInternal(ATTRIBUTENUM8);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum8.
     * @param value value to set the AttributeNum8
     */
    public void setAttributeNum8(Number value) {
        setAttributeInternal(ATTRIBUTENUM8, value);
    }

    /**
     * Gets the attribute value for AttributeNum9, using the alias name AttributeNum9.
     * @return the AttributeNum9
     */
    public Number getAttributeNum9() {
        return (Number)getAttributeInternal(ATTRIBUTENUM9);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum9.
     * @param value value to set the AttributeNum9
     */
    public void setAttributeNum9(Number value) {
        setAttributeInternal(ATTRIBUTENUM9, value);
    }

    /**
     * Gets the attribute value for AttributeNum10, using the alias name AttributeNum10.
     * @return the AttributeNum10
     */
    public Number getAttributeNum10() {
        return (Number)getAttributeInternal(ATTRIBUTENUM10);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeNum10.
     * @param value value to set the AttributeNum10
     */
    public void setAttributeNum10(Number value) {
        setAttributeInternal(ATTRIBUTENUM10, value);
    }

    /**
     * Gets the attribute value for AttributeDate1, using the alias name AttributeDate1.
     * @return the AttributeDate1
     */
    public Date getAttributeDate1() {
        return (Date)getAttributeInternal(ATTRIBUTEDATE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeDate1.
     * @param value value to set the AttributeDate1
     */
    public void setAttributeDate1(Date value) {
        setAttributeInternal(ATTRIBUTEDATE1, value);
    }

    /**
     * Gets the attribute value for AttributeDate2, using the alias name AttributeDate2.
     * @return the AttributeDate2
     */
    public Date getAttributeDate2() {
        return (Date)getAttributeInternal(ATTRIBUTEDATE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeDate2.
     * @param value value to set the AttributeDate2
     */
    public void setAttributeDate2(Date value) {
        setAttributeInternal(ATTRIBUTEDATE2, value);
    }

    /**
     * Gets the attribute value for AttributeDate3, using the alias name AttributeDate3.
     * @return the AttributeDate3
     */
    public Date getAttributeDate3() {
        return (Date)getAttributeInternal(ATTRIBUTEDATE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeDate3.
     * @param value value to set the AttributeDate3
     */
    public void setAttributeDate3(Date value) {
        setAttributeInternal(ATTRIBUTEDATE3, value);
    }

    /**
     * Gets the attribute value for AttributeDate4, using the alias name AttributeDate4.
     * @return the AttributeDate4
     */
    public Date getAttributeDate4() {
        return (Date)getAttributeInternal(ATTRIBUTEDATE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeDate4.
     * @param value value to set the AttributeDate4
     */
    public void setAttributeDate4(Date value) {
        setAttributeInternal(ATTRIBUTEDATE4, value);
    }

    /**
     * Gets the attribute value for AttributeDate5, using the alias name AttributeDate5.
     * @return the AttributeDate5
     */
    public Date getAttributeDate5() {
        return (Date)getAttributeInternal(ATTRIBUTEDATE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeDate5.
     * @param value value to set the AttributeDate5
     */
    public void setAttributeDate5(Date value) {
        setAttributeInternal(ATTRIBUTEDATE5, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity CiHeadersEOImpl.
     */
    public CiHeadersEOImpl getCiHeaders() {
        return (CiHeadersEOImpl)getAttributeInternal(CIHEADERS);
    }

    /**
     * Sets <code>value</code> as the associated entity CiHeadersEOImpl.
     */
    public void setCiHeaders(CiHeadersEOImpl value) {
        setAttributeInternal(CIHEADERS, value);
    }


    /**
     * @param expCiLine2Id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number expCiLine2Id) {
        return new Key(new Object[]{expCiLine2Id});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s = new oracle.jbo.server.SequenceImpl("IEDOC_EXP_CI_LINES_2_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        this.setExpCiLine2Id(sVal);
      
    }
}
